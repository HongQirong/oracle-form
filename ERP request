SELECT frv.*
      ,fcpv.user_concurrent_program_name
      ,frg.request_group_code
  FROM apps.fnd_concurrent_programs_vl fcpv
      ,applsys.fnd_request_group_units frgu
      ,applsys.fnd_request_groups frg
      ,apps.fnd_responsibility_vl frv
 WHERE fcpv.user_concurrent_program_name like '%XX%'
       AND fcpv.concurrent_program_id = frgu.request_unit_id
       AND frgu.request_group_id = frg.request_group_id
       AND frg.request_group_id = frv.request_group_id;

SELECT fnd_webfile.get_url(file_type => 4
                          , --輸出類行
                           id => 40396935
                          , --Request_id
                           gwyuid => ''
                          , --不使用
                           two_task => ''
                          , --不使用
                           expire_time => 5 --URL保留分鐘數
                                            )
          url
  FROM DUAL;

SELECT DECODE((SELECT terminal_id
                 FROM fnd_logins
                WHERE login_id = fnd_global.login_id)
             ,'useless', NULL
             ,'Concurrent', TRUNC(SYSDATE
                                 ,'MM')
             ,TO_CHAR(TRUNC(SYSDATE
                           ,'MM')
                     ,p.profile_option_value))
          trs_reference_s
  FROM (SELECT v.profile_option_value
              ,v.level_id
              ,ROW_NUMBER() OVER (ORDER BY v.level_id DESC) level_seq
          FROM fnd_profile_options_vl l
              ,fnd_profile_option_values v
         WHERE 1 = 1
               AND l.profile_option_id = v.profile_option_id
               AND v.level_value IN (0
                                    ,fnd_global.resp_appl_id
                                    ,fnd_global.resp_id
                                    ,fnd_global.user_id)
               AND v.level_id IN (10001
                                 ,10002
                                 ,10003
                                 ,10004)
               AND l.profile_option_id = &profile_option_id
               AND l.application_id = &application_id
               AND 1 = 1) p
 WHERE level_seq = 1;

CREATE PACKAGE BODY pkg
IS
   PROCEDURE etl(p_date_from IN     VARCHAR2
                ,p_date_to   IN     VARCHAR2
                ,p_org_id    IN     NUMBER
                ,p_result       OUT VARCHAR2 --S是成功，E是錯誤
                ,p_error_msg    OUT VARCHAR2)
   IS
      v_error EXCEPTION; --本程式有錯， 拋例外統一處理錯誤訊息
      v_call_error EXCEPTION; --呼叫的程式拋出例外，且已有紀錄錯誤程式行
   BEGIN
      NULL;
      p_result := 'S';
   EXCEPTION
      WHEN v_call_error
      THEN
         p_result := 'E';
      WHEN v_error
      THEN
         p_result := 'E';
         p_error_msg := SUBSTRB(NULLIF(p_error_msg
                                       || CHR(10)
                                      ,CHR(10))
                                || '此次執行的程式:'
                                || CHR(10)
                                || DBMS_UTILITY.format_error_stack
                                || DBMS_UTILITY.format_error_backtrace
                                || DBMS_UTILITY.format_call_stack
                               ,1
                               ,500);
      WHEN OTHERS
      THEN
         p_result := 'E';
         p_error_msg := SUBSTR(NULLIF(p_error_msg
                                      || CHR(10)
                                     ,CHR(10))
                               || '此次執行的程式:'
                               || CHR(10)
                               || DBMS_UTILITY.format_error_stack
                               || DBMS_UTILITY.format_error_backtrace
                               || DBMS_UTILITY.format_call_stack
                              ,1
                              ,500);
   END etl;

   PROCEDURE main_prc(p_date_from IN     VARCHAR2
                     ,p_date_to   IN     VARCHAR2
                     ,p_org_id    IN     NUMBER
                     ,p_result       OUT VARCHAR2 --S是成功，E是錯誤
                     ,p_error_msg    OUT VARCHAR2)
   IS
      v_error EXCEPTION; --本程式有錯， 拋例外統一處理錯誤訊息
      v_call_error EXCEPTION; --呼叫的程式拋出例外，且已有紀錄錯誤程式行
   BEGIN
      NULL;
      p_result := 'S';
   EXCEPTION
      WHEN v_call_error
      THEN
         p_result := 'E';
      WHEN v_error
      THEN
         p_result := 'E';
         p_error_msg := SUBSTRB(NULLIF(p_error_msg
                                       || CHR(10)
                                      ,CHR(10))
                                || '此次執行的程式:'
                                || CHR(10)
                                || DBMS_UTILITY.format_error_stack
                                || DBMS_UTILITY.format_error_backtrace
                                || DBMS_UTILITY.format_call_stack
                               ,1
                               ,500);
      WHEN OTHERS
      THEN
         p_result := 'E';
         p_error_msg := SUBSTR(NULLIF(p_error_msg
                                      || CHR(10)
                                     ,CHR(10))
                               || '此次執行的程式:'
                               || CHR(10)
                               || DBMS_UTILITY.format_error_stack
                               || DBMS_UTILITY.format_error_backtrace
                               || DBMS_UTILITY.format_call_stack
                              ,1
                              ,500);
   END main_prc;

   PROCEDURE main_req(p_errbuf       OUT VARCHAR2
                     ,p_retcode      OUT VARCHAR2 --0正常，2錯誤
                     ,p_date_from IN     VARCHAR2
                     ,p_date_to   IN     VARCHAR2
                     ,p_org_id    IN     NUMBER)
   IS
      v_error EXCEPTION; --本程式有錯， 拋例外統一處理錯誤訊息
      v_call_error EXCEPTION; --呼叫的程式拋出例外，且已有紀錄錯誤程式行
      v_result VARCHAR2(1);
   BEGIN
      fnd_file.put_line(fnd_file.LOG
                       ,'p_date_from：'
                        || p_date_s);
      fnd_file.put_line(fnd_file.LOG
                       ,'p_date_to：'
                        || p_date_e);
      fnd_file.put_line(fnd_file.LOG
                       ,'p_org_id：'
                        || p_org_id);
      NULL;

      IF NVL(v_result, 'E') != 'S'
      THEN
         RAISE v_call_error;
      END IF;

      COMMIT;
      p_retcode := 0;
   EXCEPTION
      WHEN v_call_error
      THEN
         p_retcode := 2;
      WHEN v_error
      THEN
         p_retcode := 2;
         p_errbuf := SUBSTRB(NULLIF(p_errbuf
                                    || CHR(10)
                                   ,CHR(10))
                             || '此次執行的程式:'
                             || CHR(10)
                             || DBMS_UTILITY.format_error_stack
                             || DBMS_UTILITY.format_error_backtrace
                             || DBMS_UTILITY.format_call_stack
                            ,1
                            ,500);
      WHEN OTHERS
      THEN
         p_retcode := 2;
         p_errbuf := SUBSTR(NULLIF(p_errbuf
                                   || CHR(10)
                                  ,CHR(10))
                            || '此次執行的程式:'
                            || CHR(10)
                            || DBMS_UTILITY.format_error_stack
                            || DBMS_UTILITY.format_error_backtrace
                            || DBMS_UTILITY.format_call_stack
                           ,1
                           ,500);
   END main_req;
END pkg;
/
